{"ast":null,"code":"var _jsxFileName = \"/Users/b0212160/Desktop/React/news-feed-app/src/Components/Timeline.js\";\nimport React, { Component } from 'react';\nimport './../CSS/Timeline.css';\nimport NewsFeed from './NewsElement';\nimport NavBar from './NavBar';\nimport Loading from './Loading';\nimport './../../node_modules/bootstrap/dist/js/bootstrap.min.js';\n\nclass Timeline extends Component {\n  constructor(props) {\n    super(props);\n\n    this.apiRef = urlRef => {\n      this.setState({\n        url: urlRef\n      });\n    };\n\n    this.fetchHandler = () => {\n      fetch(this.state.url).then(response => {\n        return response.json();\n      }).then(result => {\n        console.log(result.articles);\n        this.setState({\n          posts: result.articles,\n          loaded: 1,\n          favorites: this.state.favorites.concat([result.articles[0], result.articles[1]])\n        });\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          loaded: 2\n        });\n      });\n    };\n\n    this.searchQuery = (query, type) => {\n      if (type === \"search\") {\n        this.apiRef(\"https://newsapi.org/v2/everything?q=\" + query + \"&apiKey=\" + this.state.api);\n      } else if (type === \"home\") {\n        this.apiRef(\"https://newsapi.org/v2/top-headlines?country=in&apiKey=\" + this.state.api);\n      } else if (type === \"bookmarks\") {\n        this.setState({\n          posts: this.state.favorites\n        });\n      } else {\n        this.apiRef(\"https://newsapi.org/v2/top-headlines?country=in&category=\" + query + \"&apiKey=\" + this.state.api);\n      }\n    };\n\n    this.updateBookmark = (value, post) => {\n      if (value === false) {\n        this.setState({\n          favorites: this.state.favorites.concat(post)\n        });\n      } else {\n        let prevBookmarkList = this.state.favorites;\n        prevBookmarkList = prevBookmarkList.filter(value => {\n          value !== post;\n        });\n        this.setState({\n          favorites: prevBookmarkList\n        });\n      }\n    };\n\n    this.renderPost = () => {\n      if (this.state.posts === undefined) {\n        return React.createElement(\"h1\", {\n          class: \"NotLoaded\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"Sorry Could not Load Anything\");\n      } else if (this.state.loaded === 2) {\n        return React.createElement(\"h1\", {\n          class: \"NotLoaded\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, \"Internet Not Working\");\n      } else {\n        const postElement = this.state.posts.map((post, index) => {\n          let bookmarked = false;\n\n          if (this.state.favorites.indexOf(post) >= 0) {\n            console.log(\"working\");\n            bookmarked = true;\n          }\n\n          return React.createElement(NewsFeed, {\n            key: index,\n            value: post,\n            bookmark: bookmarked,\n            updateBookmarkHandler: this.updateBookmark,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          });\n        });\n        return postElement;\n      }\n    };\n\n    this.state = {\n      posts: [],\n      url: \"https://newsapi.org/v2/top-headlines?country=in&apiKey=20154dc2da4d4cabbd1bcda1bc8bc69b\",\n      loaded: 0,\n      api: \"20154dc2da4d4cabbd1bcda1bc8bc69b\",\n      favorites: []\n    };\n  } //Sets  State url to the query url\n\n\n  //Feteches Initial Data\n  componentDidMount() {\n    this.fetchHandler();\n  } //If a new api is called update the render\n\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.url !== this.state.url) {\n      console.log(this.state.url);\n      this.fetchHandler();\n    }\n\n    console.log(this.state.posts);\n  } //calls the api based on the type of request\n\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(NavBar, {\n      queryHandler: this.searchQuery,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, this.state.loaded === 0 ? React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }) : \"\"), React.createElement(\"div\", {\n      class: \"container newsFeeds\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, this.renderPost()));\n  }\n\n}\n\nexport default Timeline;","map":{"version":3,"sources":["/Users/b0212160/Desktop/React/news-feed-app/src/Components/Timeline.js"],"names":["React","Component","NewsFeed","NavBar","Loading","Timeline","constructor","props","apiRef","urlRef","setState","url","fetchHandler","fetch","state","then","response","json","result","console","log","articles","posts","loaded","favorites","concat","catch","error","searchQuery","query","type","api","updateBookmark","value","post","prevBookmarkList","filter","renderPost","undefined","postElement","map","index","bookmarked","indexOf","componentDidMount","componentDidUpdate","prevProps","prevState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './../CSS/Timeline.css'\nimport NewsFeed from './NewsElement';\nimport NavBar from './NavBar';\nimport Loading from './Loading';\n\nimport './../../node_modules/bootstrap/dist/js/bootstrap.min.js'\n\n\n\n\nclass Timeline extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            posts: [],\n            url: \"https://newsapi.org/v2/top-headlines?country=in&apiKey=20154dc2da4d4cabbd1bcda1bc8bc69b\",\n            loaded: 0,\n            api: \"20154dc2da4d4cabbd1bcda1bc8bc69b\",\n            favorites: []\n        };\n\n    }\n\n    //Sets  State url to the query url\n    apiRef = (urlRef) => {\n        this.setState({\n            url: urlRef\n        })\n    }\n\n    //Fetches The data from API\n    fetchHandler = () => {\n        fetch(this.state.url)\n            .then(response => {\n                return response.json();\n            }).then(result => {\n                console.log(result.articles)\n                this.setState({\n                    posts: result.articles,\n                    loaded: 1,\n                    favorites: this.state.favorites.concat([result.articles[0], result.articles[1]])\n                })\n            })\n            .catch((error) => {\n                console.log(error);\n                this.setState({\n                    loaded: 2\n                })\n            });\n\n    }\n\n    //Feteches Initial Data\n\n    componentDidMount() {\n        this.fetchHandler();\n    }\n\n    //If a new api is called update the render\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.url !== this.state.url) {\n            console.log(this.state.url);\n            this.fetchHandler();\n        }\n        console.log(this.state.posts);\n    }\n\n    //calls the api based on the type of request\n    searchQuery = (query, type) => {\n        if (type === \"search\") {\n            this.apiRef(\"https://newsapi.org/v2/everything?q=\" + \n            query + \"&apiKey=\" + this.state.api);\n        }\n        else if(type=== \"home\") {\n            this.apiRef(\"https://newsapi.org/v2/top-headlines?country=in&apiKey=\" + this.state.api);\n        }\n        else if(type=== \"bookmarks\"){\n            this.setState({\n                posts: this.state.favorites\n            })\n        }\n        else {\n            this.apiRef(\"https://newsapi.org/v2/top-headlines?country=in&category=\" + \n            query + \"&apiKey=\"+ this.state.api);\n        }\n    }\n\n    updateBookmark = (value, post) => {\n        if(value === false){\n            this.setState({\n                favorites: this.state.favorites.concat(post)\n            })\n        }\n        else{\n            let prevBookmarkList = this.state.favorites\n            prevBookmarkList = prevBookmarkList.filter((value) => {\n                value !== post\n            })\n            this.setState({\n                favorites: prevBookmarkList\n            })\n        }\n    }\n\n    //Render posts for the timeline and gives appropriate messages on Errors\n    renderPost = () => {\n\n        if (this.state.posts === undefined) {\n            return (<h1 class=\"NotLoaded\">Sorry Could not Load Anything</h1>);\n        }\n        else if (this.state.loaded === 2) {\n            return (<h1 class=\"NotLoaded\">Internet Not Working</h1>)\n        }\n        else {\n            const postElement = this.state.posts.map((post, index) =>{\n                let bookmarked = false;\n                    if(this.state.favorites.indexOf(post)>=0){\n                        console.log(\"working\")\n                        bookmarked = true;\n                    }\n\n                    return <NewsFeed key={index} value={post} bookmark={bookmarked}\n                     updateBookmarkHandler = {this.updateBookmark}></NewsFeed>\n            }\n            );\n            return postElement;\n        }\n    }\n\n\n    render() {\n        return (\n            <>\n                <NavBar queryHandler={this.searchQuery} />\n\n                <div class=\"container\">\n                    {this.state.loaded === 0 ? <Loading /> : \"\"}\n                </div>\n\n                <div class=\"container newsFeeds\">\n\n                    {this.renderPost()}\n                </div>\n            </>\n        )\n    }\n\n}\n\nexport default Timeline;"]},"metadata":{},"sourceType":"module"}